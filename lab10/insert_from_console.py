import psycopg2
import csv
from tabulate import tabulate


conn = psycopg2.connect(
    host="localhost",
    dbname="lab10",
    user="postgres",
    password="12345",
    port=5432               
)

cur = conn.cursor()
conn.set_session(autocommit=True)


cur.execute("""
CREATE TABLE IF NOT EXISTS phonebook (
    user_id SERIAL PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL
);
""")


while True:
    print("""
üìò –ú–ï–ù–Æ:
1 - –í—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –≤—Ä—É—á–Ω—É—é
2 - –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ CSV
3 - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
0 - –í—ã–π—Ç–∏
""")
    choice = input("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ: ")

    if choice == "1":
        
        first_name = input("–ò–º—è: ")
        last_name = input("–§–∞–º–∏–ª–∏—è: ")
        phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ")
        cur.execute(
            "INSERT INTO phonebook (first_name, last_name, phone_number) VALUES (%s, %s, %s)",
            (first_name, last_name, phone)
        )
        print(" –ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω.\n")

    elif choice == "2":
        
        filepath = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É: ")
        try:
            with open(filepath, 'r') as f:
                reader = csv.DictReader(f)
                for row in reader:
                    cur.execute(
                        "INSERT INTO phonebook (first_name, last_name, phone_number) VALUES (%s, %s, %s)",
                        (row['first_name'], row['last_name'], row['phone_number'])
                    )
            print("–î–∞–Ω–Ω—ã–µ –∏–∑ CSV —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.\n")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}\n")

    elif choice == "3":
        
        cur.execute("SELECT * FROM phonebook;")
        rows = cur.fetchall()
        print(tabulate(rows, headers=["ID", "–ò–º—è", "–§–∞–º–∏–ª–∏—è", "–¢–µ–ª–µ—Ñ–æ–Ω"], tablefmt="fancy_grid"))

    elif choice == "0":
        print(" –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
        break

    else:
        print(" –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")


cur.close()
conn.close()
